import os, sys, commands

Import('env')
Import('jsoncpp_include_path')
Import('platform_libs')
Import('boost_lib_path')
Import('jsoncpp_lib_path')
Import('hiredis_lib_path')

env = env.Clone()

prgs = []

os_exec_op_sources = ['../base/os_exec_op.o', 'os_exec_op_test.cc']
crypto_md5_op_sources = ['crypto_md5_op_test.cc']
encoding_base64_op_sources = ['encoding_base64_op_test.cc']
daemon_op_sources = ['../base/daemon_op.o', 'daemon_op_test.cc']
chunk_head_op_sources = ['../base/chunk_head_op.o', 'chunk_head_op_test.cc']
buffer_sources = ['../base/buffer.o', 'buffer_test.cc']
filepath_op_sources = ['../base/filepath_op.o', 'filepath_op_test.cc']
noncopyable_sources = ['noncopyable_test.cc']
wait_event_sources = ['../base/wait_event.o', 'wait_event_test.cc']
this_thread_op_sources = ['../base/this_thread_op.o', 'this_thread_op_test.cc']
task_thread_sources = ['../base/wait_event.o', '../base/task_thread.o', 'task_thread_test.cc']
thread_pool_sources = ['../base/wait_event.o', '../base/thread_pool.o', 'thread_pool_test.cc']
stuff_sources = ['../base/stuff.o', 'stuff_test.cc']
dump_sources = ['../base/filepath_op.o', '../base/dump.o', 'dump_test.cc']
strings_sources = ['../base/strings.o', 'strings_test.cc']
this_proc_op_sources = ['../base/filepath_op.o', '../base/this_proc_op.o', 'this_proc_op_test.cc']
this_machine_op_sources = ['../base/filepath_op.o', '../base/this_machine_op.o', 'this_machine_op_test.cc']

prgs += env.Program('os_exec_op_test', os_exec_op_sources, LIBS = platform_libs)
prgs += env.Program('crypto_md5_op_test', crypto_md5_op_sources, LIBS = platform_libs)
prgs += env.Program('encoding_base64_op_test', encoding_base64_op_sources, LIBS = platform_libs)
prgs += env.Program('daemon_op_test', daemon_op_sources, LIBS = platform_libs)
prgs += env.Program('chunk_head_op_test', chunk_head_op_sources, LIBS = platform_libs)
prgs += env.Program('buffer_test', buffer_sources, LIBS = platform_libs)
prgs += env.Program('filepath_op_test', filepath_op_sources, LIBS = platform_libs)
prgs += env.Program('noncopyable_test', noncopyable_sources, LIBS = platform_libs)
prgs += env.Program('wait_event_test', wait_event_sources, LIBS = platform_libs)
prgs += env.Program('this_thread_op_test', this_thread_op_sources, LIBS = platform_libs)
prgs += env.Program('task_thread_test', task_thread_sources, LIBS = platform_libs)
prgs += env.Program('thread_pool_test', thread_pool_sources, LIBS = platform_libs)
prgs += env.Program('stuff_test', stuff_sources, LIBS = platform_libs)
prgs += env.Program('dump_test', dump_sources, LIBS = platform_libs)
prgs += env.Program('strings_test', strings_sources, LIBS = platform_libs)
prgs += env.Program('this_proc_op_test', this_proc_op_sources, LIBS = platform_libs)
prgs += env.Program('this_machine_op_test', this_machine_op_sources, LIBS = platform_libs)

log_sources = ['../base/log.o', 'log_test.cc']
with_boost_libs = [platform_libs]
with_boost_libs += [File(os.path.join(boost_lib_path, 'libboost_log_setup.a'))]
with_boost_libs += [File(os.path.join(boost_lib_path, 'libboost_log.a'))]
with_boost_libs += [File(os.path.join(boost_lib_path, 'libboost_thread.a'))]
with_boost_libs += [File(os.path.join(boost_lib_path, 'libboost_system.a'))]
with_boost_libs += [File(os.path.join(boost_lib_path, 'libboost_filesystem.a'))]
prgs += env.Program('log_test', log_sources, LIBS = with_boost_libs)

json_config_sources = ['../base/json_config.o', 'json_config_test.cc']
with_jsoncpp_libs = [platform_libs]
with_jsoncpp_libs += [File(os.path.join(jsoncpp_lib_path, 'libjsoncpp.a'))]
prgs += env.Program('json_config_test', json_config_sources, CPPPATH = jsoncpp_include_path, LIBS = with_jsoncpp_libs)

redis_backend_sources = ['../base/wait_event.o', '../base/task_thread.o', '../base/redis_backend.o', 'redis_backend_test.cc']
with_hiredis_libs = [platform_libs]
with_hiredis_libs += [File(os.path.join(hiredis_lib_path, 'libhiredis.a'))]
prgs += env.Program('redis_backend_test', redis_backend_sources, LIBS = with_hiredis_libs)

Return('prgs')
