import os, sys, commands

Import('env')
Import('platform_libs')
Import('boost_lib_path')
Import('jsoncpp_lib_path')

prgs = []

os_exec_op_sources = ['../base/os_exec_op.o', 'os_exec_op_test.cc']
crypto_md5_op_sources = ['crypto_md5_op_test.cc']
encoding_base64_op_sources = ['encoding_base64_op_test.cc']
daemon_op_sources = ['../base/daemon_op.o', 'daemon_op_test.cc']
chunk_head_op_sources = ['../base/chunk_head_op.o', 'chunk_head_op_test.cc']
buffer_sources = ['../base/buffer.o', 'buffer_test.cc']

prgs += env.Program('os_exec_op_test', os_exec_op_sources, LIBS = platform_libs)
prgs += env.Program('crypto_md5_op_test', crypto_md5_op_sources, LIBS = platform_libs)
prgs += env.Program('encoding_base64_op_test', encoding_base64_op_sources, LIBS = platform_libs)
prgs += env.Program('daemon_op_test', daemon_op_sources, LIBS = platform_libs)
prgs += env.Program('chunk_head_op_test', chunk_head_op_sources, LIBS = platform_libs)
prgs += env.Program('buffer_test', buffer_sources, LIBS = platform_libs)

log_sources = ['../base/log.o', 'log_test.cc']
with_boost_libs = [platform_libs]
with_boost_libs += [File(os.path.join(boost_lib_path, 'libboost_log_setup.a'))]
with_boost_libs += [File(os.path.join(boost_lib_path, 'libboost_log.a'))]
with_boost_libs += [File(os.path.join(boost_lib_path, 'libboost_thread.a'))]
with_boost_libs += [File(os.path.join(boost_lib_path, 'libboost_system.a'))]
with_boost_libs += [File(os.path.join(boost_lib_path, 'libboost_filesystem.a'))]
prgs += env.Program('log_test', log_sources, LIBS = with_boost_libs)

json_config_sources = ['../base/json_config.o', 'json_config_test.cc']
with_jsoncpp_libs = [platform_libs]
with_jsoncpp_libs += [File(os.path.join(jsoncpp_lib_path, 'libjsoncpp.a'))]
prgs += env.Program('json_config_test', json_config_sources, LIBS = with_jsoncpp_libs)

Return('prgs')
